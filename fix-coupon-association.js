const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function fixCouponAssociation() {
  try {
    console.log('üîß CORRIGINDO ASSOCIA√á√ÉO DO CUPOM...\n')

    // Buscar o √∫ltimo cupom sem buyer_id
    const orphanCoupon = await prisma.coupon.findFirst({
      where: {
        buyer_id: null
      },
      orderBy: { created_at: 'desc' }
    })

    if (!orphanCoupon) {
      console.log('‚úÖ Nenhum cupom √≥rf√£o encontrado')
      return
    }

    console.log('üé´ CUPOM √ìRF√ÉO ENCONTRADO:')
    console.log('   ID:', orphanCoupon.id)
    console.log('   C√≥digo:', orphanCoupon.code)
    console.log('   Criado em:', orphanCoupon.created_at)

    // Buscar sess√£o mais recente (ativa ou n√£o)
    const recentSession = await prisma.session.findFirst({
      orderBy: {
        expires: 'desc'
      },
      include: {
        user: true
      }
    })

    if (!recentSession?.user) {
      console.log('‚ùå Nenhuma sess√£o encontrada')
      return
    }

    console.log('\nüë§ USU√ÅRIO DA SESS√ÉO RECENTE:')
    console.log('   ID:', recentSession.user.id)
    console.log('   Nome:', recentSession.user.name)
    console.log('   Email:', recentSession.user.email)

    // Atualizar o cupom para associ√°-lo ao usu√°rio
    const updatedCoupon = await prisma.coupon.update({
      where: { id: orphanCoupon.id },
      data: { buyer_id: recentSession.user.id },
      include: {
        buyer: true
      }
    })

    console.log('\n‚úÖ CUPOM ATUALIZADO COM SUCESSO!')
    console.log('   C√≥digo:', updatedCoupon.code)
    console.log('   Comprador:', updatedCoupon.buyer?.name)
    console.log('   Email:', updatedCoupon.buyer?.email)

    // Tentar enviar o email do cupom
    console.log('\nüìß TENTANDO ENVIAR EMAIL...')
    
    // Importar a fun√ß√£o de envio de email
    const { sendCouponEmail } = require('./src/lib/email')
    
    try {
      await sendCouponEmail({
        to: recentSession.user.email,
        couponCode: updatedCoupon.code,
        couponValue: updatedCoupon.face_value_cents,
        customerName: recentSession.user.name || 'Cliente'
      })
      console.log('‚úÖ Email enviado com sucesso!')
    } catch (emailError) {
      console.error('‚ùå Erro ao enviar email:', emailError.message)
    }

  } catch (error) {
    console.error('‚ùå Erro:', error)
  } finally {
    await prisma.$disconnect()
  }
}

fixCouponAssociation()